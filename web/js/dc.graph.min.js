/*!
 *  dc.graph 0.1.0
 *  http://dc-js.github.io/dc.graph.js/
 *  Copyright 2015 Gordon Woodhull
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

!function(){function a(a,b,c){"use strict";var d={version:"0.1.0"},e=function(a){var b=a,c=null,d=function(a){return arguments.length?(b=a,c&&c(),this):b};return d.react=function(a){return arguments.length?(c=a,this):c},d};return d.diagram=function(b,d){function f(){o=cola.d3adaptor().avoidOverlaps(!0).size([j.width(),j.height()]),j.modLayout()&&j.modLayout()(o)}function g(a){return function(b){return a(b.orig)}}function h(a,b){b.attr("d",function(a){var b=a.target.x-a.source.x,c=a.target.y-a.source.y,d=Math.sqrt(b*b+c*c),e=b/d,f=c/d,g=j.nodeRadiusAccessor()(a.source.orig)-1,h=j.nodeRadiusAccessor()(a.target.orig)-1,i=a.source.x+g*e,k=a.source.y+g*f,l=a.target.x-h*e,m=a.target.y-h*f;return"M"+i+","+k+"L"+l+","+m}).attr("width",function(a){var b=a.source.x-a.target.x,c=a.source.y-a.target.y;return Math.sqrt(b*b+c*c)}),a.attr("transform",function(a){return"translate("+a.x+","+a.y+")"})}function i(){return k=j.root().append("svg").attr("width",j.width()).attr("height",j.height())}var j={},k=null,l=null,m=null,n=null,o=null,p=25,q=a.dispatch("end");return j.root=e(null),j.width=e(200),j.height=e(200),j.nodeDim=e(),j.nodeGroup=e(),j.edgeDim=e(),j.edgeGroup=e(),j.nodeKeyAccessor=e(function(a){return a.key}),j.edgeKeyAccessor=e(function(a){return a.key}),j.sourceAccessor=e(),j.targetAccessor=e(),j.nodeRadiusAccessor=e(function(){return p}),j.nodeColorAccessor=e(function(){return"white"}),j.nodePadding=e(6),j.nodeLabelAccessor=e(function(a){return a.value.label}),j.transitionDuration=e(500),j.constrain=e(function(){return[]}),j.initLayoutOnRedraw=e(!1),j.modLayout=e(function(){}),j.showTicks=e(!0),j.redraw=function(){var a=j.nodeGroup().all(),b=j.edgeGroup().all();o&&o.stop();var c=a.reduce(function(a,b,c){return a[j.nodeKeyAccessor()(b)]=c,a},{}),d=a.map(function(a){return{orig:a,width:2*j.nodeRadiusAccessor()(a)+j.nodePadding(),height:2*j.nodeRadiusAccessor()(a)+j.nodePadding()}}),e=b.map(function(a){return{orig:a,source:c[j.sourceAccessor()(a)],target:c[j.targetAccessor()(a)]}}).filter(function(a){return void 0!==a.source&&void 0!==a.target}),i=n.selectAll(".edge").data(e,g(j.edgeKeyAccessor())),k=(i.enter().append("svg:path").attr("class","edge"),i.exit());k.remove();var l=m.selectAll(".node").data(d,g(j.nodeKeyAccessor())),p=l.enter().append("g").attr("class","node");p.append("circle"),p.append("text").attr("class","nodelabel"),l.select("circle").attr("r",g(j.nodeRadiusAccessor())).attr("fill",g(j.nodeColorAccessor())),l.select("text").text(g(j.nodeLabelAccessor()));var r=l.exit(),s=j.constrain()(d,e);return r.remove(),o.on("tick",j.showTicks()?function(){h(l,i)}:null),j.initLayoutOnRedraw()&&f(),o.nodes(d).links(e).constraints(s).start(10,20,20).on("end",function(){j.showTicks()||h(l,i),q.end()}),this},j.render=function(){return j.initLayoutOnRedraw()||f(),j.resetSvg(),l=k.append("g"),n=l.append("g"),m=l.append("g"),j.redraw()},j.on=function(a,b){return q.on(a,b),this},j.select=function(a){return j.root().select(a)},j.resetSvg=function(){return j.select("svg").remove(),i()},j.root(a.select(b)),c.registerChart(j,d),j},d.d3=a,d.crossfilter=b,d.dc=c,d}if("function"==typeof define&&define.amd)define(["d3","crossfilter","dc"],a);else if("object"==typeof module&&module.exports){var b=require("d3"),c=require("crossfilter");"function"!=typeof c&&(c=c.crossfilter);var d=require("dc");module.exports=a(b,c,d)}else this.dc_graph=a(d3,crossfilter,dc)}();
//# sourceMappingURL=dc.graph.min.js.map